version: 2.1

python-docker-image: &python-docker-image
  working_directory: ~/repo
  docker:
    - image: circleci/python:3.6
      environment:
        PIPENV_VENV_IN_PROJECT: true

commands:
  restore-pipenv-cache:
    description: "Restore pipenv cache"
    steps:
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

  save-pipenv-cache:
    description: "Save pipenv cache"
    steps:
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

jobs:
  test:
    <<: *python-docker-image
    steps:
      - checkout
      - restore-pipenv-cache
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save-pipenv-cache
      - run:
          name: Run tests
          command: pipenv run pytest --junitxml=./tests/test-report.xml
      - store_test_results:
          path: ./tests
  lint:
    <<: *python-docker-image
    steps:
      - checkout
      - restore-pipenv-cache
      - run:
          name: Install dependencies
          command: pipenv sync --dev
      - save-pipenv-cache
      - run:
          name: Run linter
          command: pipenv run lint

  build:
    <<: *python-docker-image
    steps:
      - checkout
      - restore-pipenv-cache
      - run:
          name: Install dependencies
          command: pipenv sync
      - save-pipenv-cache
      - run: mkdir image
      - run: cp -r walter_white ./image/
      - run: cp Dockerfile ./image/ && cp setup.py ./image/ && cp README.md ./image/
      - run: pipenv lock -r > ./image/requirements.txt
      - persist_to_workspace:
          root: ~/repo/
          paths:
            - image

  release-image:
    machine: true
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build and push container
          command: |
            cd ~/repo/image
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker build -t meandor/walter-white:$CIRCLE_SHA1 .
            docker tag meandor/walter-white:$CIRCLE_SHA1 meandor/walter-white:latest
            docker push meandor/walter-white:$CIRCLE_SHA1
            docker push meandor/walter-white:latest

workflows:
  test-build-release:
    jobs:
      - test
      - lint
      - build:
          requires:
            - test
            - lint
      - release-image:
          requires:
            - build
